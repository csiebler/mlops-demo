variables: 
 - template: german-credit-config.yml

trigger: none

pool:
  vmImage: 'ubuntu-20.04'

stages:
- stage: TrainModel
  displayName: Train & register model
  jobs:
  - job: TrainModel
    steps:
      - task: AzureCLI@2
        displayName: 'Install AML CLI'
        inputs:
          azureSubscription: $(ml_workspace_connection)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az extension add -n azure-cli-ml

      - task: AzureCLI@2
        displayName: 'Attach to workspace'
        inputs:
          azureSubscription: $(ml_workspace_connection)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          workingDirectory: $(ml_model_path)
          inlineScript: |
            az ml folder attach -g $(ml_workspace_rg) -w $(ml_workspace_name)

      - task: AzureCLI@2
        displayName: 'Train and explain model'
        inputs:
          azureSubscription: $(ml_workspace_connection)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          workingDirectory: $(ml_model_path)
          inlineScript: |
            az ml run submit-script \
            --run-configuration-name config/train-amlcompute \
            --target $(ml_compute_name) \
            --experiment-name $(ml_experiment_name) \
            --output-metadata-file run.json

      - task: AzureCLI@2
        displayName: 'Register model'
        inputs:
          azureSubscription: $(ml_workspace_connection)
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          workingDirectory: $(ml_model_path)
          inlineScript: |
            az ml model register \
            --name $(ml_model_name) \
            --asset-path outputs/$(ml_model_filename) \
            --run-metadata-file run.json \
            --output-metadata-file model.json \
            --property git-repo-url=$(Build.Repository.Uri) \
            --property git-commit-id=$(Build.SourceVersion)

      - task: CopyFiles@2
        inputs:
          SourceFolder: $(ml_model_path)
          TargetFolder: $(Build.ArtifactStagingDirectory)

      - publish: $(Build.ArtifactStagingDirectory)
        artifact: model_drop

- stage: DeployModel
  displayName: Deploy model
  jobs:
  - job: DeployModel
    steps:

    - download: current
      artifact: model_drop

    - task: AzureCLI@2
      displayName: 'Install AML CLI'
      inputs:
        azureSubscription: $(ml_workspace_connection)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az extension add -n azure-cli-ml

    - task: AzureCLI@2
      displayName: 'Attach to workspace'
      inputs:
        azureSubscription: $(ml_workspace_connection)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        workingDirectory: $(Pipeline.Workspace)
        inlineScript: |
          az ml folder attach -g $(ml_workspace_rg) -w $(ml_workspace_name)

    - task: AzureCLI@2
      displayName: 'Deploy model to AKS'
      inputs:
        azureSubscription: $(ml_workspace_connection)
        workingDirectory: $(Pipeline.Workspace)
        scriptLocation: inlineScript
        scriptType: bash
        inlineScript: |
          az ml model deploy -n $(ml_deployment_name) \
            --model-metadata-file model.json \
            --compute-target $(ml_aks_cluster) \
            --inference-config-file config/inference-config.yml \
            --deploy-config-file config/deployment-config-aks.yml \
            --overwrite
